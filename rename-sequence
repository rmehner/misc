#!/usr/bin/env python

"""Renames files as a sequence."""

__appname__ = 'rename-sequence'
__author__  = 'Jeremy Cantrell <jmcantrell@gmail.com>'
__url__     = 'http://jmcantrell.me'
__date__    = 'Fri 2010-06-25 00:42:16 (-0400)'

import os
from scriptutils.options import Options

def get_options():
    opts = Options(usage='Usage: %prog [options] file...')
    opts.add_option('-n', '--dry-run', action='store_true', help='Dry run. Does nothing destructive.')
    opts.add_option('-s', '--start', type='int', default=1, help='Start the sequence at START.')
    opts.add_option('-P', '--prefix', default='', help='Use PREFIX for file prefix.')
    opts.add_option('-S', '--suffix', default='', help='Use SUFFIX for file suffix.')
    opts.add_option('-w', '--width', type='int', default=0, help='Set the width of count to WIDTH.')
    return opts.parse_args()

def main():
    opts, args = get_options()
    mw = len(str(len(args)))
    files = []
    if opts.width < mw: opts.width = mw
    seen = []
    for i, fn in enumerate(args):
        d = os.path.dirname(fn)
        ext = os.path.splitext(fn)[1]
        n = '%s%0*d%s%s' % (opts.prefix, opts.width, i, opts.suffix, ext)
        nf = os.path.join(d, n)
        if nf not in seen:
            seen.append(nf)
            print nf
        if fn == nf: continue
        files.append((fn, nf))
    if not opts.dry_run:
        for fn, nf in files:
            os.rename(fn, fn+'.tmp')
        for fn, nf in files:
            os.rename(fn+'.tmp', nf)

if __name__ == '__main__': main()
