#!/usr/bin/env python

__appname__ = 'detox.py'
__author__  = 'Jeremy Cantrell <jmcantrell@gmail.com>'
__url__     = 'http://jmcantrell.me'
__date__    = 'Sun 2010-10-24 00:42:06 (-0400)'
__license__ = 'BSD'

import sys, unicodeutils
from scriptutils.arguments import Arguments

CASES = ['capitalize', 'lower', 'swapcase', 'title', 'upper']

def get_arguments(): #{{{1
    a = Arguments(description="Clean text from standard input.")
    a.add_argument('-s', '--sanitize', action='store_true', help='produce super-clean and easy-to-read output')
    a.add_argument('--space-to-underscore', action='store_true', help='replace spaces with underscores')
    a.add_argument('--squeeze', action='store_true', help='squeeze consecutive underscores/spaces')
    a.add_argument('--strip-non-windows', action='store_true', help='strip windows-incompatible characters')
    a.add_argument('--strip-non-ascii', action='store_true', help='strip non-ascii characters')
    a.add_argument('--strip-non-word', action='store_true', help='strip non-word characters')
    a.add_argument('--strip-replace', default='', help='string to use when replacing stripped characters')
    a.add_argument('--normalize', action='store_true', help='normalize text')
    a.add_argument('--normalize-symbols', action='store_true', help='normalize symbols')
    a.add_argument('--case', choices=CASES, help='change case to CASE')
    return a.parse_args()

def main(): #{{{1
    args = get_arguments()
    space = '_' if args.space_to_underscore else ' '
    replace = args.strip_replace or ''
    for line in sys.stdin:
        line = unicodeutils.decode(line)
        if args.sanitize:
            line = unicodeutils.sanitize(line)
        else:
            if args.case:
                line = getattr(line, args.case)()
            if args.normalize:
                line = unicodeutils.normalize(line)
            if args.normalize_symbols:
                line = unicodeutils.normalize_symbols(line)
            if args.space_to_underscore:
                line = line.replace(' ', '_')
            if args.strip_non_windows:
                line = unicodeutils.strip_non_windows(line, replace)
            if args.strip_non_ascii:
                line = unicodeutils.strip_non_ascii(line, replace)
            if args.strip_non_word:
                line = unicodeutils.strip_non_word(line, replace)
            if args.squeeze:
                line = unicodeutils.squeeze(line, space)
        print unicodeutils.encode(line)

#}}}1

if __name__ == '__main__': main()
